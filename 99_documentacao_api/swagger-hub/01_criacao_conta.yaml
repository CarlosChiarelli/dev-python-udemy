openapi: 3.0.0
info:
  version: 1.0.0
  title: Especificação para criação da conta de usuário
  description: Especificação para criação da conta de usuário
  contact:
    email: ca.chiarelli.97@gmail.com
security:
  - application:
    - read
    - write
paths:
  /accounts:
    parameters:
      - name: token
        in: header
        description: Token JWT no header
        required: true
        schema:
          type: array
          items:
            type: string
            format: string
        style: simple
        example: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IlRoaWFnbyIsInN1YiI6IjEzIiwianRpIjoiZDBlMGFkZDItOTlkMC00NWY1LThlYztY2FiYzIwZjkxMGYyIiwiaWF0IjoxNTAwMDMzMjE0LCJd3RWYWxpZGF0aW9uIjoiVXN1YXJpbyIsIm5iZiI6MTUwMDAzMzIxMywiZXhwIjoxNTAwMDMzMjczLCJpc3MiOiJJc3N1ZXIiLCJhdWQiOiJBdWRpZW5jZSJ9.SmjuyXgloA2RUhIlAEetrQwfC0EhBmhu-xOMzyY3Y_Q
    get:
      summary: Recuperar todas as contas
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body_response'
        400:
          description: Dados request enviados incorretos
        401:
          description: Token inválido, inexistente ou expirado
        500:
          description: Erro no servidor
    post:
      summary: Cria uma nova conta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_request'
      responses:
        201:
          description: Criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body_response'
        400:
          description: Dados request enviados incorretos
        401:
          description: Token inválido, inexistente ou expirado
        500:
          description: Erro no servidor
  /accounts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: Id de identificação da conta do usuário
        schema:
          type: string
      - name: token
        in: header
        description: Token JWT no header
        required: true
        schema:
          type: array
          items:
            type: string
            format: string
        style: simple
        example: >-
          eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6IlRoaWFnbyIsInN1YiI6IjEzIiwianRpIjoiZDBlMGFkZDItOTlkMC00NWY1LThlYztY2FiYzIwZjkxMGYyIiwiaWF0IjoxNTAwMDMzMjE0LCJd3RWYWxpZGF0aW9uIjoiVXN1YXJpbyIsIm5iZiI6MTUwMDAzMzIxMywiZXhwIjoxNTAwMDMzMjczLCJpc3MiOiJJc3N1ZXIiLCJhdWQiOiJBdWRpZW5jZSJ9.SmjuyXgloA2RUhIlAEetrQwfC0EhBmhu-xOMzyY3Y_Q
    get:
      summary: Recuperar uma conta de usuário pelo id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/body_response'
        400:
          description: Dados request enviados incorretos
        401:
          description: Token inválido, inexistente ou expirado
        404:
          description: Recurso {id} não encontrado
        500:
          description: Erro no servidor
    put:
      summary: Atualizar uma conta de usuário pelo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_request'
      responses:
        202:
          description: Aceito
        400:
          description: Dados request enviados incorretos
        401:
          description: Token inválido, inexistente ou expirado
        404:
          description: Recurso {id} não encontrado
        500:
          description: Erro no servidor
    delete:
      summary: Excluir uma conta de usuário pelo id
      responses:
        204:
          description: Sem conteúdo
        400:
          description: Dados request enviados incorretos
        401:
          description: Token inválido, inexistente ou expirado
        404:
          description: Recurso {id} não encontrado
        500:
          description: Erro no servidor
components:
  schemas:
    body_response:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
        - phoneNumber
        - dateBirth
        - gender
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: first
        lastName:
          type: string
          example: last
        email:
          type: string
          format: email
          example: admin@admin.com
        phoneNumber:
          type: number
          example: 5555-5555
        dateBirth:
          type: string
          format: date
          example: 10/12/2000
        gender:
          type: string
          example: M
          enum:
            - M
            - F
    body_request:
      type: object
      required:
        - firstName
        - lastName
        - email
        - phoneNumber
        - password
        - dateBirth
        - gender
      properties:
        firstName:
          type: string
          example: first
        lastName:
          type: string
          example: last
        email:
          type: string
          format: email
          example: admin@admin.com
        password:
          type: string
          format: password
          example: 123
        phoneNumber:
          type: number
          example: 5555-5555
        dateBirth:
          type: string
          format: date
          example: 10/12/2000
        gender:
          type: string
          example: M
          enum:
            - M
            - F
